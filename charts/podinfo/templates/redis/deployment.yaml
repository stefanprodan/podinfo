{{- if .Values.redis.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "podinfo.fullname" . }}-redis
  labels:
    app: {{ template "podinfo.fullname" . }}-redis
    {{- include "podinfo.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "podinfo.fullname" . }}-redis
  template:
    metadata:
      labels:
        app: {{ template "podinfo.fullname" . }}-redis
        {{- include "podinfo.labels" . | nindent 8 }}
        app.kubernetes.io/component: cache
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/redis/config.yaml") . | sha256sum | quote }}
    spec:
      {{- if .Values.redis.securityContext }}
      securityContext:
        {{- toYaml .Values.redis.securityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ template "podinfo.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: redis
          image: "{{ .Values.redis.repository }}:{{ .Values.redis.tag }}"
          imagePullPolicy: IfNotPresent
          {{- if .Values.redis.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.redis.containerSecurityContext | nindent 12 }}
          {{- end }}
          command:
            - redis-server
            - "/redis-master/redis.conf"
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 32Mi
          volumeMounts:
            - mountPath: /var/lib/redis
              name: redis-system
            - mountPath: /redis-master
              name: config
            - mountPath: /data
              name: data
      volumes:
        - name: redis-system
          emptyDir: {}
        - name: config
          configMap:
            name: {{ template "podinfo.fullname" . }}-redis
            items:
              - key: redis.conf
                path: redis.conf
        {{- if .Values.redis.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "podinfo.fullname" . }}
        {{- end }}
{{- end -}}
